# Vari√°veis
TENANT_ID ?= $(shell echo $$DYNATRACE_ENV | grep -o 'ogp[0-9]*')
DYNATRACE_URL ?= https://$(TENANT_ID).live.dynatrace.com
DYNATRACE_TOKEN ?= $(shell echo $$DYNATRACE_TOKEN)
GITHUB_RUN_ID ?= $(shell echo $$GITHUB_RUN_ID)
GITHUB_ACTOR ?= $(shell echo $$GITHUB_ACTOR)
GITHUB_SERVER_URL ?= $(shell echo $$GITHUB_SERVER_URL)
GITHUB_REPOSITORY ?= $(shell echo $$GITHUB_REPOSITORY)
PIPELINE_URL ?= $(GITHUB_SERVER_URL)/$(GITHUB_REPOSITORY)/actions/runs/$(GITHUB_RUN_ID)
TIMESTAMP ?= $(shell date -u +"%Y-%m-%dT%H:%M:%S.000Z")
HOST_ID ?= $(shell echo $$DT_HOST_ID)

.PHONY: check-env send-deployment-event

# Verifica vari√°veis de ambiente
check-env:
	@echo "üîç Verificando vari√°veis de ambiente..."
	@if [ -z "$(TENANT_ID)" ]; then echo "‚ùå N√£o foi poss√≠vel extrair TENANT_ID do DYNATRACE_ENV"; exit 1; fi
	@if [ -z "$(DYNATRACE_TOKEN)" ]; then echo "‚ùå DYNATRACE_EVENTS_TOKEN n√£o definido"; exit 1; fi
	@if [ -z "$(GITHUB_RUN_ID)" ]; then echo "‚ùå GITHUB_RUN_ID n√£o definido"; exit 1; fi
	@if [ -z "$(GITHUB_ACTOR)" ]; then echo "‚ùå GITHUB_ACTOR n√£o definido"; exit 1; fi
	@if [ -z "$(HOST_ID)" ]; then echo "‚ùå HOST_ID n√£o definido"; exit 1; fi
	@echo "‚úÖ Todas as vari√°veis de ambiente est√£o definidas"

	@echo "Debug VARs"
	@echo "TENANT_ID: $(TENANT_ID)"
	@echo "DYNATRACE_TOKEN: $(DYNATRACE_TOKEN)"
	@echo "GITHUB_RUN_ID: $(GITHUB_RUN_ID)"
	@echo "GITHUB_ACTOR: $(GITHUB_ACTOR)"
	@echo "HOST_ID: $(HOST_ID)"
	@echo "GITHUB_SERVER_URL: $(GITHUB_SERVER_URL)"
	@echo "GITHUB_REPOSITORY: $(GITHUB_REPOSITORY)"
	@echo "PIPELINE_URL: $(PIPELINE_URL)"
	@echo "TIMESTAMP: $(TIMESTAMP)"

# Envia evento de deployment para o Dynatrace
send-deployment-event:
	@echo "üì§ Enviando evento de deployment para o Dynatrace..."
	@curl -X POST "$(DYNATRACE_URL)/api/v2/events/ingest" \
		-H "Authorization: Api-Token $(DYNATRACE_TOKEN)" \
		-H "accept: application/json" \
		-H "Content-Type: application/json" \
		-d '{"eventType":"CUSTOM_DEPLOYMENT","title":"Deployment App Component","timeout":15,"entitySelector":"type(HOST),entityId(HOST-$(HOST_ID))","properties":{"Pipeline URL":"$(PIPELINE_URL)","Deployment ID":"$(GITHUB_RUN_ID)","Respons√°vel":"$(GITHUB_ACTOR)","Timestamp":"$(TIMESTAMP)"}}'

# Target principal
notify-governance: check-env send-deployment-event
	@echo "‚úÖ Evento de governan√ßa enviado com sucesso!" 